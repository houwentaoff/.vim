多色高亮显示单词 see http://www.vim.org/scripts/script.php?script_id=1238
Usage: 

Highlighting: 
  Normal mode: 
    \m mark or unmark the word under (or before) the cursor 
          Place the cursor under the word to be highlighted, press \m, then the word will be colored. 
    \r manually input a regular expression 
          To highlight an arbitrary regular expression, press \r and input the regexp. 
    \n clear this mark (i.e. the mark under the cursor), or clear all highlighted marks 
  Visual mode: 
    \m mark or unmark a visual selection 
          Select some text in Visual mode, press \m, then the selection will be colored. 
    \r manually input a regular expression (base on the selection text) 
  Command line: 
    :Mark regexp   to mark a regular expression 
    :Mark regexp   with exactly the same regexp to unmark it 
    :Mark          to clear all marks 
Searching: 
  Normal mode: 
    * # \* \# \/ \? use these six keys to jump to the other marks 
    and you could also use VIM's / and ? to search, since the mark patterns have 
    been added to the search history. 

Here is a sumerization of * # \* \# \/ \?: 

" First of all, \#, \? and # behave just like \*, \/ and *, respectively, 
" except that \#, \? and # search backward. 
" 
" \*, \/ and *'s behaviors differ base on whether the cursor is currently 
" placed over an active mark: 
" 
"       Cursor over mark                  Cursor not over mark 
" --------------------------------------------------------------------------- 
"  \*   jump to the next occurrence of      jump to the next occurrence of 
"       current mark, and remember it       "last mark". 
"       as "last mark". 
" 
"  \/   jump to the next occurrence of        same as left 
"       ANY mark. 
" 
"   *   if \* is the most recently used,        do VIM's original * 
"       do a \*; otherwise (\/ is the 
"       most recently used), do a \/. 
